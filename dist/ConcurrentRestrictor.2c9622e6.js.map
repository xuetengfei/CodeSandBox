{"version":3,"sources":["page/ConcurrentRestrictor/index.js"],"names":["api","ayncList","Array","from","map","_","i","fetchData","fetch","then","response","json","catch","err","console","error","index","ret","setRet","count","setCount","asyncPool","poolLimit","array","iteratorFn","executing","item","p","push","e","c","splice","indexOf","length","Promise","race","all","run","log","v","args","idx","JSON","stringify"],"mappings":"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","file":"ConcurrentRestrictor.2c9622e6.js","sourceRoot":"..","sourcesContent":["import React, { useState } from 'react';\n\n// 9个请求\nconst api = 'https://httpbin.org/get?id=';\nconst ayncList = Array.from(Array(9)).map((_, i) => `${api}${i + 1}`);\n\nfunction fetchData(api) {\n  return fetch(api)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n}\n\nexport default function index() {\n  const [ret, setRet] = useState(null);\n  const [count, setCount] = useState(0);\n  // asyncPool\n  async function asyncPool(poolLimit, array, iteratorFn) {\n    const ret = [];\n    const executing = [];\n    for (const item of array) {\n      const p = iteratorFn(item);\n      ret.push(p);\n      const e = p.then(_ => {\n        setCount(c => c + 1);\n        executing.splice(executing.indexOf(e), 1);\n      });\n      executing.push(e);\n      if (executing.length >= poolLimit) {\n        await Promise.race(executing);\n      }\n    }\n    return Promise.all(ret);\n  }\n\n  function run() {\n    setCount(0);\n    setRet(null);\n    asyncPool(3, ayncList, fetchData).then(ret => {\n      console.log('ret: ', ret);\n      setRet(ret.map(v => ({ args: v.args })));\n    });\n  }\n\n  return (\n    <div>\n      <h2>concurrency limit</h2>\n      <div className=\"toast toast-success\">\n        Clicking the button below will initiate the request. There were nine requests and the\n        maximum concurrency control was 3. During the request process, the request will always be\n        processed at the maximum number of concurrent times, reducing the request time to the\n        maximum possible extent. Open the console and view Network Waterfall\n      </div>\n      <div className=\"divider\"></div>\n      <div>\n        <button className=\"btn badge\" onClick={run} data-badge={count}>\n          fetch Data\n        </button>\n      </div>\n      <div>\n        <ul>{ret && ret.map((v, idx) => <li key={idx}>{JSON.stringify(v, null, 2)}</li>)}</ul>\n      </div>\n    </div>\n  );\n}\n"]}